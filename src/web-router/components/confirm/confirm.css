/**
 * Copyright 2019 British Broadcasting Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* This .css file styles the 'Confirm' view when it is in use
and is roughly structured such that the css file from top to bottom
styles the view from top to bottom */

:root {
  --unrouted: #a19ea0;
  --routed: #f5d328;
  --remove: #ec5d57;
  --contracted: #dfe3e2;
  --node-width: 24px;
  --confirm-button: #70bf41;
  --clear-button: #a6aaa9;
  --button-disabled: #dcdee0;
  --one-change-height: 38px;
  --line-container-width: calc(33.333% - 36px);
  --header-height: 35px;
  --clear-confirm-height: 64px;
}

.confirm {
  & .header {
    height: var(--header-height);

    /* The column headers: "Senders" and "Receivers" */
    & .column-title {
      margin-top: 6px;
      text-align: left;
    }

    & .filler-block {
      width: var(--line-container-width);
    }
  }

  /* The scrollable area that contains all the changes */
  & .changes-scroll {
    top: 0;
    height: calc(100% - var(--header-height) - var(--clear-confirm-height));
    width: 100%;

    /* Animates the adding/removing of a change */
    & .transition-enter {
      opacity: 0.01;
    }

    & .transition-enter.transition-enter-active {
      opacity: 1;
      transition: opacity 250ms ease-in;
    }

    & .transition-leave {
      opacity: 1;
    }

    & .transition-leave.transition-leave-active {
      opacity: 0.01;
      max-height: 0;
      transition: max-height 250ms, opacity 150ms ease-in;
    }

    /* "One change" consists of a sender, line, receiver and delete button */
    & .one-change {
      width: 100%;
      transition: max-height 0.25s;
      margin-top: 8px;
      max-height: 50px;

      /* Set up the nodes for senders and receivers
          - most formatting for nodes is done by previous css files */
      & .senders,
      & .receivers {
        height: var(--one-change-height);

        & .routable {
          margin: 0;
        }

        & .node {
          background-color: var(--routed);
          top: 50%;

          & .gel-icon {
            fill: transparent;
          }
        }

        /* Override previous properties so these mock routables
        don't change colour when hovered or when expanded in 'Route' view */
        & .button {
          &:hover {
            background-color: var(--contracted);
            cursor: default;
          }
        }

        & .expanded {
          & .button {
            background-color: var(--contracted);
          }

          & .node {
            box-shadow: none;
          }
        }
      }

      /* Apply positioning to sender/receiver nodes separately */
      & .senders {
        padding-left: 0;

        & .node {
          right: 0;
          transform: translate(12px, -50%);

          &.unicast {
            transform: translate(9px, -50%) rotate(45deg);
          }
        }
      }

      & .receivers .node {
        transform: translate(-12px, -50%);

        &.unicast {
          transform: translate(-9px, -50%) rotate(45deg);
        }
      }

      /* Apply positioning to the line container and line svg such that
      the line appears to connect both nodes *** a bit of a hack *** */
      & .line-container {
        height: var(--one-change-height);
        padding-left: 15px;
        width: var(--line-container-width);

        & .line-svg {
          width: 200%;
          height: 40px;
          transform: translate(-10px);

          & .line {
            stroke-width: 3;
            stroke: var(--routed);
          }
        }

        /* Set up scissors icon for unroute changes then hide it */
        & .gel-icon-scissors {
          margin: auto;
          width: 32px;
          height: 32px;
          fill: var(--remove);
          background-color: white;
          display: none;
          transform: translate(-10px, -38px);
        }
      }

      /* This is the alternative container which appears if either
      routable in a change is unavailable */
      & .line-container-unavailable {
        height: var(--one-change-height);
        text-align: center;

        /* This CSS is a bit hacky but makes the "sender/receiver unavailable"
        text appear in the middle of the space between the sender and receiver */
        & .unavailable-text {
          width: 80px;
          height: 20px;
          margin: auto;
        }
      }

      /* Set up the delete button which is a /red circle with a /white X
      inside */
      & .delete-container {
        height: var(--one-change-height);
        width: 36px;

        & .delete-button {
          margin-left: 12px;
          margin-top: 5px;

          &:hover {
            cursor: pointer;
            background-color: red;
          }

          background-color: var(--remove);
          width: var(--node-width);
          height: var(--node-width);
          border-radius: calc(var(--node-width) / 2);
          transform: translate(0%, 10%);

          /* Use a "No" icon as the X for the button */
          & .gel-icon-no {
            height: 24px;
            width: 12px;
            fill: white;
            transform: translate(50%);
          }
        }
      }
    }

    /* Apply colour changes to a change that has "unroute" in its state
    and also unhide scissors icon */
    & .unroute {
      & .senders .node,
      & .receivers .node {
        background-color: var(--remove);
      }

      & .line-container .line-svg .line {
        stroke: var(--remove);
      }

      & .line-container .gel-icon-scissors {
        display: block;
      }
    }

    /* Fade out changes involving an unavailable routable */
    & .unavailable {
      transition: opacity 0.25s linear;
      opacity: 0.25;
    }
  }

  /* Style the container which holds the "clear" and "confirm" buttons */
  & .clear-confirm-container {
    height: 64px;
    width: 100%;

    & .buttons-div {
      width: 50%;
      margin-right: 12px;

      & .button {
        width: 40%;
        min-width: 100px;
        height: 40px;
        margin-left: 12px;
        margin-top: 12px;
        background-color: var(--clear-button);
        color: white;
        text-align: center;
        letter-spacing: 0.1rem;
        border: none;
        border-radius: 4px;
        transition: background-color 0.25s;
        padding-left: 8px;

        & .button-label {
          vertical-align: middle;
        }

        &:hover {
          cursor: pointer;
          background-color: color(var(--clear-button) shade(20%));
        }
      }

      & .confirm {
        background-color: var(--confirm-button);

        &:hover {
          background-color: color(var(--confirm-button) shade(20%));
        }
      }

      & .disabled {
        cursor: default;
        background-color: var(--button-disabled);

        &:hover {
          cursor: default;
          background-color: var(--button-disabled);
        }
      }
    }
  }
}
