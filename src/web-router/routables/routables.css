/* This .css file styles the routables seen in all three views inlcuding
their label text, icon and node or checkbox */

:root {
  --unrouted: #a19ea0;
  --routed: #f5d328;
  --remove: #ec5d57;
  --contracted: #dfe3e2;
  --expanded: #ff6db5;
  --color: #000;
  --remove-icon: #fff;
  --node-width: 24px;
  --background-color: #dfe3e2;
  --routable-height: 38px;
}

.routable {
  position: relative;
  height: var(--routable-height);
  margin-top: 8px;
  width: 99%;
  max-height: var(--routable-height);

  /* Button is the large /grey clickable area containing the icon and label */
  & .button {
    width: 100%;
    cursor: initial;
    border-radius: 0;
    border: none;
    fill: var(--color);
    color: var(--color);
    padding: 0 8px 0 13px;
    transition: color 0.25s, fill 0.25s, background-color 0.25s;

    & .label {
      width: 100%;
    }

    & .label,
    & .description {
      font-weight: normal;
      letter-spacing: 0;
      text-align: right;
      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;
    }

    & .gel-icon {
      width: 32px;
      stroke: var(--color);
    }
  }

  /* Nodes are the semi-circles present on routables in the 'Route' and 'Confirm' views */
  & .node-container {
    width: 100%;
    position: absolute;
    top: 0;
    height: var(--routable-height);
    z-index: -1;
    transition: transform 0.25s;

    & .node {
      background-color: var(--unrouted);
      position: absolute;
      width: var(--node-width);
      height: var(--node-width);
      border-radius: 90px;
      transition: color 0.25s, fill 0.25s, background-color 0.25s;

      & .gel-icon {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 12px;
        transition: fill 0.25s;
      }

      /* TODO Decide on node design for unicast routables, or leave them the same
      Currently makes node a small square and rotates it/hides part of it to make a triangle */
      &.unicast {
        border-radius: 0;
        height: 18px;
        width: 18px;
      }
    }
  }

  /* A full routable is an expanded one (i.e. a sender after it has been clicked) */
  &.full {
    margin-top: 140px;
    margin-left: 10%;
    position: absolute;
    width: 33.3333%;

    & .button-container {
      width: 100%;
      position: absolute;

      & .button {
        height: auto;
        background-color: color(var(--expanded) tint(30%));

        & .gel-icon {
          height: 40px;
          margin-top: 16px;
          width: 100%;
        }

        & .label {
          width: 95%;
        }

        & .label,
        & .description {
          text-align: center;
          white-space: normal;
        }

        & .description {
          font-style: italic;
        }

        & .description-container {
          line-height: 18px;
          margin-left: 16px;
          margin-right: 16px;
          margin-bottom: 16px;
        }

        &:hover {
          cursor: pointer;
          background-color: var(--expanded);
        }
      }
    }

    & .node-container {
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      z-index: -1;

      & .node {
        right: 0;
        top: 50%;
        transform: translate(12px, -50%);

        /* Rotate and hide part of the square node to make a triangle */
        &.unicast {
          transform: translate(10px, -50%) rotate(45deg);
        }
      }
    }
  }

  /* Colour settings for routables in different states */
  & .unrouting .node,
  &.stagedUnroute .node {
    background-color: var(--remove);
  }

  &.routed .node,
  &.stagedRoute .node {
    background-color: var(--routed);

    &:hover {
      background-color: var(--remove);
      cursor: pointer;
    }
  }

  &.contracted .button {
    background-color: var(--contracted);
  }

  &:hover.selectable .button {
    cursor: pointer;
    background-color: var(--expanded);
  }

  &.disabled,
  &.removed {
    & .button {
      background-color: color(var(--contracted) tint(75%));
      fill: color(var(--color) tint(75%));
      color: color(var(--color) tint(75%));

      & .gel-icon {
        stroke: color(var(--color) tint(75%));
      }

      &:hover {
        cursor: initial;
        background-color: color(var(--contracted) tint(75%));
        fill: color(var(--color) tint(75%));
        color: color(var(--color) tint(75%));
      }
    }
  }

  /* 'Other' only seems to be used in tests for map-state */
  &.other {
    & .button {
      background-color: color(var(--contracted) tint(25%));
      fill: color(var(--color) tint(25%));
      color: color(var(--color) tint(25%));
    }

    & .unrouted {
      background-color: color(var(--unrouted) tint(25%));
    }

    & .routed {
      background-color: color(var(--routed) tint(25%));
    }
  }

  &.removed {
    & .node {
      background-color: transparent;

      & .gel-icon {
        fill: transparent;
      }
    }
  }

  &.disabled.unrouted {
    & .node {
      background-color: transparent;

      & .gel-icon {
        fill: transparent;
      }
    }
  }
}

/* Set a box shadow around an expanded routable */
.expanded {
  & .button-container,
  & .node {
    box-shadow: rgba(85, 85, 85, 0.5) -7px 7px 20px 3px;
  }
}

.other,
.contracted {
  & .full {
    display: none;
  }
}

/* The checkbox present next to routables in the 'Choose' view */
.checkbox {
  margin-left: 4px;
  display: inline-block;
  width: 12px;
  height: 12px;
  padding: 2px;
  border: solid 2px;

  &:hover {
    cursor: pointer;
  }

  & .gel-icon {
    margin: auto;
    width: 100%;
    height: 100%;
  }

  & .gel-icon-no,
  & .gel-icon-minus,
  & .gel-icon-empty {
    display: none;
  }
}

/* Display the appropriate icon in the checkbox according to checkbox state */
.checked .gel-icon-no,
.all .gel-icon-no,
.some .gel-icon-minus,
.unchecked .gel-icon-empty,
.none .gel-icon-empty {
  display: block;
}
